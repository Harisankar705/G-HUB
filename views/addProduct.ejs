<!DOCTYPE HTML>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>G_HUB</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="assets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <link href="../assets/css/dashboard.css" rel="stylesheet"/>
    
    <style>
        /* .cropper-container {
            width: 100%;
            height: 100%;
            max-width: 600px;
            max-height: 600px;
        } */

        /* #main-img-preview,
        #additional-img-preview {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        } */

        .cropper-drag-box {
            max-width: 3000px;
            max-height: 3000px;
            object-fit: cover;
            border: 1px solid #ddd;
            margin-bottom: 10px;
        }
    </style>  
</head>
 
<body>
    <div class="screen-overlay"></div>
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="#" class="brand-wrap">
                <h2>G-HUB</h2>
                <h3>Admin Panel</h3>
            </a>
            <a href="#" onclick="goBack()"><img src="../public/back-button-removebg-preview.png" id="back-button"></a>

        </div>
        <nav>
            <ul class="menu-aside">
                <li class="menu-item ">
                    <a class="menu-link" href="/adminPanel"> <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/category"> <i class="icon material-icons md-menu_open"></i>
                        <span class="text">Categories</span>
                    </a>
                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="/admin/products"> <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Products</span>
                    </a>
                    <li class="menu-item active">
                        <a class="menu-link" href="/admin/add"> <i class="icon material-icons md-plus"></i>
                            <span class="text">Add Product</span>
                        </a>
                    </li>
                    <li class="menu-item ">
                        <a class="menu-link" href="/admin/user-management"> <i class="icon material-icons md-person"></i>
                            <span class="text">User Management</span>
                        </a>
                    </li>
                    <li class="menu-item ">
                        <a class="menu-link" href="/admincoupons"> <i class="icon material-icons md-check_box"></i>
                            <span class="text">Coupon Management</span>
                        </a>
                    </li>
                    <li class="menu-item ">
                        <a class="menu-link" href="/offer-management"> <i class="icon material-icons md-redeem"></i>
                            <span class="text">Offer Management</span>
                        </a>
                    </li>
                    <li class="menu-item has-submenu">
                        <a class="menu-link" href="#"> <i class="icon material-icons md-star"></i>
                            <span class="text">Best Selling</span>
                        </a>
                        <ul class="submenu">
                            <li><a href="/bestSellingProducts">Best Selling Product </a></li>
                            <li><a href="/bestSellingCategory">Best Selling Category </a></li>
                            <li><a href="/bestSellingBrands">Best Selling Brand </a></li>
                        </ul>
                    </li>
                    
                    <li class="menu-item ">
                        <a class="menu-link" href='/admin-orders'> <i class="icon material-icons md-book"></i>
                            <span class="text">Orders</span>
                        </a>
                    </li>
                    <li class="menu-item ">
                        <a class="menu-link" href='/admin-brand'> <i class="icon material-icons md-comment"></i>
                            <span class="text">Brand Management</span>
                        </a>
                    </li>
                    <li class="menu-item ">
                        <a class="menu-link" href="#" id="logoutLink"> <i class="icon material-icons md-exit_to_app"></i>
                            <span class="text">Logout</span>
                        </a>
                    </li>
                    

                </li>
            </ul>
            <hr>
            <br>
            <br>
        </nav>
    </aside>
    <main class="main-wrap">
        <section class="content-main">
            <div class="row">
                <div class="col-9">
                    <div class="content-header">
                        <h2 class="content-title">Add New Product</h2>
                      
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="card mb-4">
                        <div class="card-body">
                            <div class="table responsive">
                                <form action="/admin/add" method="post" enctype="multipart/form-data" id="addProductForm">
                                    <div class="form-row align-items-center">
                                        <div class="mb-4">
                                            <label for="product_name" class="form-label" name="product_name">Product title</label>
                                            <input type="text" class="form-control mb-2" id="name" name="name" placeholder="Product name" maxlength="75">
                                        
                                        </div>
                                        <div class="mb-4">
                                            <label for="product_name" class="form-label">Product Category</label>
                                            <select class="form-select mb-2" id="category" name="category" required>
                                                <option value="" selected disabled>choose</option>
                                                <% categories.forEach((category) => { %>
                                                    <option value="<%= category._id %>"><%= category.name %></option>
                                                <% }) %>
                                            </select>
                                        </div>
                                        <div class="mb-4">
                                            <label for="brand_name" class="form-label">Product Brand</label>
                                            <select class="form-select mb-2" id="brand" name="brand" required>
                                                <option value="" selected disabled>choose</option>
                                                <% brand.forEach((brand) => { %>
                                                    <option value="<%= brand._id %>"><%= brand.name %></option>
                                                <% }) %>
                                            </select>
                                        </div>
                                        <div class="mb-4">
                                            <label for="description">Product Description:</label>
        <textarea name="description" id="description" placeholder="Type here" class="form-control" rows="4" required></textarea>
        <ul id="pointList"></ul>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-4">
                                                <div class="mb-4">
                                                    <label class="form-label" name="price">Product price</label>
                                                    <div class="row gx-2">
                                                        <input type="number" class="form-control mb-2" id="price" name="price" placeholder="Price of product in rupee" maxlength="10" required>
                                                    </div>
                                                    <div class="mb-4">
                                                        <label class="form-label" name="pric">Stock</label>
                                                        <div class="row gx-2">
                                                            <input type="number" class="form-control mb-2" id="stock" name="stock" placeholder="Stock" maxlength="10" required>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-4">
                                                    <div class="mb-4">
                                                        <label class="sr-only" for="main-image">Main Image</label><br><br>
                                                        <div class="row gx-2">
                                                            <input type="file" class="form-control-file" id="main-img" name="mainimage" accept=".jpg, .jpeg, .png, .webp" required>
                                                            <div id="main-img-preview"></div>
                                                            <button id="saveButton" class="btn btn-light rounded font-sm hover-up" >Save</button>

                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="row">
                                                <div class="col-lg-4">
                                                    <div class="mb-4">
                                                        <label class="sr-only" for="additionalImage">Additional Image</label><br><br>
                                                        <input type="file" id="additional-img" name="additionalImage" accept=".jpg, .jpeg, .png, .webp" multiple required onchange="limitFileSelection(this, 3)">
                                                        <div id="additional-img-preview"></div>
                                                        <!-- <button id="addsaveButton" class="btn btn-light rounded font-sm hover-up" disabled>Save</button> -->
                                                        

                                    
                                                    </div>
                                                    <div>
                                                        <button type="submit" class="btn btn-light rounded font-sm mr-5 text-body hover-up">Save</button>
                                                        <!-- <button class="btn btn-md rounded font-sm hover-up">Publich</button> -->
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div><!-- card end// -->
                </div>
            </div> <!-- card end// -->
            </div>
        </section> <!-- content-main end// -->
        <footer class="main-footer font-xs">
            <div class="row pb-30 pt-15">
                <div class="col-sm-6">
                </div>
            </div>
        </footer>
    </main>
         <style>
        #back-button {
  width: 30px;
}
    </style>

    <script src="../assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="../assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="../assets/js/vendors/select2.min.js"></script>
    <script src="../assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="../assets/js/vendors/jquery.fullscreen.min.js"></script>
    <script src="../assets/js/vendors/chart.js"></script>
    <!-- Main Script -->
    <script src="../assets/js/custom-chart.js" type="text/javascript"></script>
        <!-- Main Script -->
        <script src="../assets/js/main.js" type="text/javascript"></script>
    <!-- Main Script -->
    
    <script>
        document.getElementById('addProductForm').addEventListener('submit', async (event) => {
        event.preventDefault();
        const mainImageInput = document.getElementById('main-img');
        const nameInput = document.getElementById('name');
        const descriptionInput = document.getElementById('description')
        const priceInput = document.getElementById('price');
        const stockInput = document.getElementById('stock');

        if (nameInput.value.trim() === "" ) {
            Swal.fire({
                icon: "error",
                title: "Invalid input",
                text: "Enter a valid product name"
            });
            return;
        }

        if (descriptionInput.value.trim() === "") {
            Swal.fire({
                icon: "error",
                title: "Invalid input",
                text: "Enter a valid description"
            });
            return;
        }

        const priceValue = parseFloat(priceInput.value);

        if (isNaN(priceValue) || priceValue <= 0) {
            Swal.fire({
                icon: "error",
                title: "Invalid input",
                text: "Enter a valid price"
            });
            return;
        }

        const stockValue = parseFloat(stockInput.value);
        if (isNaN(stockValue) || stockValue <= 0) {
            Swal.fire({
                icon: "error",
                title: "Invalid input",
                text: "Enter a valid stock"
            });
            return;
        }

        // Continue with form submission
        const formData = new FormData(event.target);

        try {
            const response = await fetch('/admin/add', {
                method: 'POST',
                body: formData
            });

            if (response.ok) {
                // Successful form submission
                Swal.fire({
                    icon: 'success',
                    title: 'Product Created',
                    showConfirmButton: true,
                    timer: 1500
                }).then(() => {
                    location.reload();
                });
            } else {
                const responseData = await response.json();
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: responseData.message || 'Product already exists',
                });
            }
        } catch (error) {
            console.error('Error submitting form:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Something went wrong'
            });
        }
    });
    function goBack() {
        window.history.back();
    }

    const mainImgInput = document.getElementById('main-img');
    mainImgInput.addEventListener('change', function (e) {
        const files = e.target.files;
        if (files && files.length > 0) {
            const reader = new FileReader();
            reader.onload = function (e) {
                // Handle the file content here if needed
            };
            reader.readAsDataURL(files[0]);
        }
    });

    $(document).ready(function () {
        $("#logoutLink").on('click', function (e) {
            e.preventDefault();
            $.ajax({
                url: '/admin/logout',
                method: 'post',
                success: function (data) {
                    window.location.href = '/admin';
                },
                error: function (xhr, status, error) {
                    console.log("Error occurred during admin logout");
                }
            });
        });
    });

    document.getElementById('additional-img').addEventListener('change', function (event) {
        const selectedFiles = event.target.files;
        if (selectedFiles.length > 3) {
            Swal.fire({
                icon: 'info',
                title: "You can only choose a maximum of 3 files",
                showConfirmButton: true,
                timer: 2000,
                customClass: {
                    title: 'swal'
                }
            });
            event.target.value = ""; //removing the chosen files
        }
    });
    let mainCropper;
    let additionalCroppers=[]
    document.getElementById('main-img').addEventListener('change', function () {
        initCropper(this)
    });
    function initCropper(input)
    {
        const files=input.files
        if(files && files.length>0)
        {
            const reader=new FileReader()
            reader.onload=function(e)
            {
                const img=document.createElement('img')
                img.src=e.target.result
                document.getElementById('main-img-preview').innerHTML=''
                document.getElementById('main-img-preview').appendChild(img)
                mainCropper=new Cropper(img,{
                    aspectRatio:1,
                    viewMode:1,
                    autoCropArea:1,
                    dragmode:"move"
                })
                document.getElementById('cropButton').disabled=false;
                document.getElementById('saveButton').disabled=false;

            }
            reader.readAsDataURL(files[0])
        }
    }
    document.getElementById('saveButton').addEventListener('click',function(){
        const croppedCanvas=mainCropper.getCroppedCanvas()
        const croppedDataURL=croppedCanvas.toDataURL()
        const previewImg=document.createElement('img')
        previewImg.src=croppedDataURL
        document.getElementById('main-img-preview').innerHTML=''
        document.getElementById('main-img-preview').appendChild(previewImg)
        document.getElementById('cropButton').disabled=true
        document.getElementById('cropButton').disabled=true
    })

    document.getElementById('additional-img').addEventListener('change', function (event) {
    const selectedFiles = event.target.files;
    
    for (const file of selectedFiles) {
        initAdditionalCropper(file);
    }
});

function initCropper(input) {
    const files = input.files;
    if (files && files.length > 0) {
        const reader = new FileReader();
        reader.onload = function (e) {
            const img = document.createElement('img');
            img.src = e.target.result;
            document.getElementById('main-img-preview').innerHTML = '';
            document.getElementById('main-img-preview').appendChild(img);
            mainCropper = new Cropper(img, {
                aspectRatio: 1,
                viewMode: 1,
                autoCropArea: 1,
                dragmode: 'move',
            });
            document.getElementById('cropButton').disabled = false;
            document.getElementById('saveButton').disabled = false;
        };
        reader.readAsDataURL(files[0]);
    }
}

function initAdditionalCropper(file) {
    const reader = new FileReader();

    reader.onload = function (e) {
        const img = document.createElement('img');
        img.src = e.target.result;

        const previewContainer = document.getElementById('additional-img-preview');
        const container = document.createElement('div');
        container.className = 'additional-img-container';
        container.appendChild(img);

        const additionalCropper = new Cropper(img, {
            aspectRatio: 1,
            viewMode: 1,
            autoCropArea: 1,
            dragmode: 'move',
        });

        const saveButton = document.createElement('button');
        saveButton.textContent = 'Save';
        saveButton.className = 'save-button'; // Add a class for styling
        saveButton.addEventListener('click', function () {
            saveAdditionalImage(additionalCropper);
        });

        container.appendChild(saveButton);
        previewContainer.appendChild(container);
        additionalCropper.push(additionalCropper);
    };

    reader.readAsDataURL(file);
}


function saveAdditionalImage(cropper) {
    const croppedCanvas = cropper.getCroppedCanvas();
    const croppedDataURL = croppedCanvas.toDataURL();
    
    const previewImg = document.createElement('img');
    previewImg.src = croppedDataURL;

    const previewContainer = cropper.element.parentNode;
    previewContainer.innerHTML = ''; // Clear previous previews
    previewContainer.appendChild(previewImg);
}

document.getElementById('addsaveButton').addEventListener('click', function () {
    for(const additionalCropper of additionalCroppers)
    {
        saveAdditionalImage(additionalCropper)
    }
    document.getElementById('addcropButton').disabled = true;
    document.getElementById('addsaveButton').disabled = true;
});


    function previewImages(input, previewContainer) {
        const files = input.files;

        if (files) {
            previewContainer.innerHTML = ''; // Clear previous previews

            for (const file of files) {
                if (file.type.startsWith('image/')) {
                    const img = document.createElement('img');
                    img.src = URL.createObjectURL(file);
                    img.classList.add('img-preview');
                    previewContainer.appendChild(img);

                    if (previewContainer.id === "main-img-preview") {
                        mainCropper = new Cropper(img, {
                            aspectRatio: 1,
                            viewMode: 1,
                            autoCropArea: 1,
                            dragmode: "move"
                        });
                    }
                }
            }
        }
    }

    
</script>
<style>
    /* Add this to your existing styles or create a new section */
.save-button {
    padding: 10px 15px;
    background-color: #4caf50; /* Green background color */
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

.save-button:hover {
    background-color: #45a049; /* Darker green on hover */
}

</style>

</body>

</html>
